plugins {
    id 'java'
}

ext.moduleName = 'pl.mendroch.modularization.core'
group 'pl.mendroch.modularization'
version '1.0-SNAPSHOT'

sourceCompatibility = 12
targetCompatibility = 12

repositories {
    mavenCentral()
}

dependencies {
    dynamicImplementation project(':common')
    compileOnly group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.3.0.Final'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.8'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.8'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileJava {
    moduleOptions {
        addExports = [
                'java.base/jdk.internal.module': 'pl.mendroch.modularization.core',
                'java.base/jdk.internal.loader': 'pl.mendroch.modularization.core',
                'java.base/jdk.internal.misc'  : 'pl.mendroch.modularization.core'
        ]
    }
}

jar {
    def resFile = new File(buildDir, 'generated/resources/META-INF/')
    resFile.mkdirs()
    def file = new File(resFile, 'dependencies.properties')
    file.delete()
    file.createNewFile()
    project
            .getConfigurations()
            .getByName("dynamicImplementation")
            .resolvedConfiguration
            .firstLevelModuleDependencies
            .each {
                file.text += aliases.get(it.moduleGroup + ":" + it.moduleName, it.moduleGroup + "\\:" + it.moduleName) + "=" + it.moduleVersion + "\n"
            }
    manifest {
        attributes(
                "Name": project.group + ":" + project.name,
                "Specification-Version": version
        )
    }
}